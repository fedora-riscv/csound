--- Csound5.10.1/SConstruct.orig	2009-03-30 18:11:39.000000000 +0100
+++ Csound5.10.1/SConstruct	2009-03-30 18:19:44.000000000 +0100
@@ -136,8 +136,8 @@
     'Set to 1 to build Python opcodes',
     '0')
 commandOptions.Add('prefix',
-    'Base directory for installs. Defaults to /usr/local.',
-    '/usr/local')
+    'Base directory for installs. Defaults to /usr.',
+    '/usr')
 commandOptions.Add('instdir',
     'For the install target: puts instdir before the prefix',
     '')
@@ -444,9 +444,9 @@
     commonEnvironment.Prepend(CPPFLAGS = ['-DBETA'])
 
 if commonEnvironment['Lib64'] == '1':
-    commonEnvironment.Prepend(LIBPATH = ['.', '#.', '/usr/local/lib64'])
+    commonEnvironment.Prepend(LIBPATH = ['.', '#.'])
 else:
-    commonEnvironment.Prepend(LIBPATH = ['.', '#.', '/usr/local/lib'])
+    commonEnvironment.Prepend(LIBPATH = ['.', '#.'])
 
 if commonEnvironment['Word64'] == '1':
     commonEnvironment.Append(CCFLAGS = ['-fPIC'])
@@ -462,15 +462,12 @@
 if getPlatform() == 'linux':
     commonEnvironment.Append(CCFLAGS = "-DLINUX")
     commonEnvironment.Append(CPPFLAGS = '-DHAVE_SOCKETS')
-    commonEnvironment.Append(CPPPATH = '/usr/local/include')
-    commonEnvironment.Append(CPPPATH = '/usr/include')
     commonEnvironment.Append(CPPPATH = '/usr/include')
     commonEnvironment.Append(CPPPATH = '/usr/X11R6/include')
     commonEnvironment.Append(CCFLAGS = "-DPIPES")
     commonEnvironment.Append(LINKFLAGS = ['-Wl,-Bdynamic'])
 elif getPlatform() == 'darwin':
     commonEnvironment.Append(CCFLAGS = "-DMACOSX")
-    commonEnvironment.Append(CPPPATH = '/usr/local/include')
     commonEnvironment.Append(CCFLAGS = "-DPIPES")
     if commonEnvironment['useAltivec'] == '1':
         print 'CONFIGURATION DECISION: Using Altivec optimisation'
@@ -487,7 +484,6 @@
     commonEnvironment.Append(CXXFLAGS = '-DFL_DLL')
     if compilerGNU():
         commonEnvironment.Prepend(CCFLAGS = "-Wall")
-        commonEnvironment.Append(CPPPATH = '/usr/local/include')
         commonEnvironment.Append(CPPPATH = '/usr/include')
         commonEnvironment.Append(CCFLAGS = '-mthreads')
 	commonEnvironment.Append(SHLINKFLAGS = Split('-mwindows -mno-cygwin -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc'))
@@ -519,18 +515,17 @@
 
 if getPlatform() == 'linux':
     path1 = '/usr/include/python%s' % commonEnvironment['pythonVersion']
-    path2 = '/usr/local/include/python%s' % commonEnvironment['pythonVersion']
-    pythonIncludePath = [path1, path2]
+    pythonIncludePath = [path1]
     path1 = '/usr/include/tcl%s' % commonEnvironment['tclversion']
     path2 = '/usr/include/tk%s' % commonEnvironment['tclversion']
-    tclIncludePath = [path1, path2]
+    tclIncludePath = [path1]
     pythonLinkFlags = []
     if commonEnvironment['Lib64'] == '1':
         tmp = '/usr/lib64/python%s/config' % commonEnvironment['pythonVersion']
-        pythonLibraryPath = ['/usr/local/lib64', '/usr/lib64', tmp]
+        pythonLibraryPath = ['/usr/lib64', '/usr/lib64', tmp]
     else:
         tmp = '/usr/lib/python%s/config' % commonEnvironment['pythonVersion']
-        pythonLibraryPath = ['/usr/local/lib', '/usr/lib', tmp]
+        pythonLibraryPath = ['/usr/lib', '/usr/lib', tmp]
     pythonLibs = ['python%s' % commonEnvironment['pythonVersion']]
 elif getPlatform() == 'darwin':
     # find Mac OS X major version
